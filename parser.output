Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: func_decl
    3          | decl_list func_decl

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE
    5          | type ID LPAREN param_list_opt RPAREN SEMICOLON

    6 param_list_opt: ε
    7               | param_list

    8 param_list: param
    9           | param_list COMMA param

   10 param: type ID
   11      | REF type ID

   12 stmt_list: ε
   13          | stmt_list stmt

   14 stmt: var_decl_stmt
   15     | assignment_stmt
   16     | print_stmt
   17     | return_stmt
   18     | func_call_stmt
   19     | if_stmt
   20     | while_stmt

   21 var_decl_stmt: type ID SEMICOLON
   22              | type ID ARROW_LEFT expr SEMICOLON

   23 lvalue: ID
   24       | MUL ID

   25 assignment_stmt: lvalue ARROW_LEFT expr SEMICOLON

   26 func_call_stmt: func_call SEMICOLON

   27 print_stmt: PRINT expr SEMICOLON

   28 return_stmt: RETURN expr SEMICOLON

   29 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE

   30 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE

   31 type: INT
   32     | FLOAT
   33     | UNIT
   34     | RATIONAL
   35     | MATRIX
   36     | BST

   37 expr: expr PLUS expr
   38     | expr MINUS expr
   39     | expr MUL expr
   40     | expr DIV expr
   41     | expr LT expr
   42     | expr LE expr
   43     | expr GT expr
   44     | expr GE expr
   45     | expr EQ expr
   46     | expr NE expr
   47     | LPAREN expr RPAREN
   48     | AMPERSAND ID
   49     | ID
   50     | INT_LIT
   51     | FLOAT_LIT
   52     | func_call

   53 func_call: ID LPAREN arg_list_opt RPAREN

   54 arg_list_opt: ε
   55             | arg_list

   56 arg_list: expr
   57         | arg_list COMMA expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    UNIT (258) 33
    FLOAT (259) 32
    INT (260) 31
    RATIONAL (261) 34
    MATRIX (262) 35
    BST (263) 36
    PRINT (264) 27
    RETURN (265) 28
    IF (266) 29
    WHILE (267) 30
    REF (268) 11
    AMPERSAND (269) 48
    ARROW_LEFT (270) 22 25
    PLUS (271) 37
    MINUS (272) 38
    MUL (273) 24 39
    DIV (274) 40
    LT (275) 41
    LE (276) 42
    GT (277) 43
    GE (278) 44
    EQ (279) 45
    NE (280) 46
    SEMICOLON (281) 5 21 22 25 26 27 28
    LPAREN (282) 4 5 29 30 47 53
    RPAREN (283) 4 5 29 30 47 53
    LBRACE (284) 4 29 30
    RBRACE (285) 4 29 30
    COMMA (286) 9 57
    ID <str_val> (287) 4 5 10 11 21 22 23 24 48 49 53
    INT_LIT <int_val> (288) 50
    FLOAT_LIT <float_val> (289) 51


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program <rec> (36)
        on left: 1
        on right: 0
    decl_list <rec> (37)
        on left: 2 3
        on right: 1 3
    func_decl <rec> (38)
        on left: 4 5
        on right: 2 3
    param_list_opt <rec> (39)
        on left: 6 7
        on right: 4 5
    param_list <rec> (40)
        on left: 8 9
        on right: 7 9
    param <rec> (41)
        on left: 10 11
        on right: 8 9
    stmt_list <rec> (42)
        on left: 12 13
        on right: 4 13 29 30
    stmt <rec> (43)
        on left: 14 15 16 17 18 19 20
        on right: 13
    var_decl_stmt <rec> (44)
        on left: 21 22
        on right: 14
    lvalue <rec> (45)
        on left: 23 24
        on right: 25
    assignment_stmt <rec> (46)
        on left: 25
        on right: 15
    func_call_stmt <rec> (47)
        on left: 26
        on right: 18
    print_stmt <rec> (48)
        on left: 27
        on right: 16
    return_stmt <rec> (49)
        on left: 28
        on right: 17
    if_stmt <rec> (50)
        on left: 29
        on right: 19
    while_stmt <rec> (51)
        on left: 30
        on right: 20
    type <rec> (52)
        on left: 31 32 33 34 35 36
        on right: 4 5 10 11 21 22
    expr <rec> (53)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
        on right: 22 25 27 28 29 30 37 38 39 40 41 42 43 44 45 46 47 56 57
    func_call <rec> (54)
        on left: 53
        on right: 26 52
    arg_list_opt <rec> (55)
        on left: 54 55
        on right: 53
    arg_list <rec> (56)
        on left: 56 57
        on right: 55 57


State 0

    0 $accept: • program $end

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    BST       shift, and go to state 6

    program    go to state 7
    decl_list  go to state 8
    func_decl  go to state 9
    type       go to state 10


State 1

   33 type: UNIT •

    $default  reduce using rule 33 (type)


State 2

   32 type: FLOAT •

    $default  reduce using rule 32 (type)


State 3

   31 type: INT •

    $default  reduce using rule 31 (type)


State 4

   34 type: RATIONAL •

    $default  reduce using rule 34 (type)


State 5

   35 type: MATRIX •

    $default  reduce using rule 35 (type)


State 6

   36 type: BST •

    $default  reduce using rule 36 (type)


State 7

    0 $accept: program • $end

    $end  shift, and go to state 11


State 8

    1 program: decl_list •
    3 decl_list: decl_list • func_decl

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    BST       shift, and go to state 6

    $default  reduce using rule 1 (program)

    func_decl  go to state 12
    type       go to state 10


State 9

    2 decl_list: func_decl •

    $default  reduce using rule 2 (decl_list)


State 10

    4 func_decl: type • ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE
    5          | type • ID LPAREN param_list_opt RPAREN SEMICOLON

    ID  shift, and go to state 13


State 11

    0 $accept: program $end •

    $default  accept


State 12

    3 decl_list: decl_list func_decl •

    $default  reduce using rule 3 (decl_list)


State 13

    4 func_decl: type ID • LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE
    5          | type ID • LPAREN param_list_opt RPAREN SEMICOLON

    LPAREN  shift, and go to state 14


State 14

    4 func_decl: type ID LPAREN • param_list_opt RPAREN LBRACE stmt_list RBRACE
    5          | type ID LPAREN • param_list_opt RPAREN SEMICOLON

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    BST       shift, and go to state 6
    REF       shift, and go to state 15

    $default  reduce using rule 6 (param_list_opt)

    param_list_opt  go to state 16
    param_list      go to state 17
    param           go to state 18
    type            go to state 19


State 15

   11 param: REF • type ID

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    BST       shift, and go to state 6

    type  go to state 20


State 16

    4 func_decl: type ID LPAREN param_list_opt • RPAREN LBRACE stmt_list RBRACE
    5          | type ID LPAREN param_list_opt • RPAREN SEMICOLON

    RPAREN  shift, and go to state 21


State 17

    7 param_list_opt: param_list •
    9 param_list: param_list • COMMA param

    COMMA  shift, and go to state 22

    $default  reduce using rule 7 (param_list_opt)


State 18

    8 param_list: param •

    $default  reduce using rule 8 (param_list)


State 19

   10 param: type • ID

    ID  shift, and go to state 23


State 20

   11 param: REF type • ID

    ID  shift, and go to state 24


State 21

    4 func_decl: type ID LPAREN param_list_opt RPAREN • LBRACE stmt_list RBRACE
    5          | type ID LPAREN param_list_opt RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 25
    LBRACE     shift, and go to state 26


State 22

    9 param_list: param_list COMMA • param

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    BST       shift, and go to state 6
    REF       shift, and go to state 15

    param  go to state 27
    type   go to state 19


State 23

   10 param: type ID •

    $default  reduce using rule 10 (param)


State 24

   11 param: REF type ID •

    $default  reduce using rule 11 (param)


State 25

    5 func_decl: type ID LPAREN param_list_opt RPAREN SEMICOLON •

    $default  reduce using rule 5 (func_decl)


State 26

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 12 (stmt_list)

    stmt_list  go to state 28


State 27

    9 param_list: param_list COMMA param •

    $default  reduce using rule 9 (param_list)


State 28

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list • RBRACE
   13 stmt_list: stmt_list • stmt

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    BST       shift, and go to state 6
    PRINT     shift, and go to state 29
    RETURN    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    MUL       shift, and go to state 33
    RBRACE    shift, and go to state 34
    ID        shift, and go to state 35

    stmt             go to state 36
    var_decl_stmt    go to state 37
    lvalue           go to state 38
    assignment_stmt  go to state 39
    func_call_stmt   go to state 40
    print_stmt       go to state 41
    return_stmt      go to state 42
    if_stmt          go to state 43
    while_stmt       go to state 44
    type             go to state 45
    func_call        go to state 46


State 29

   27 print_stmt: PRINT • expr SEMICOLON

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 52
    func_call  go to state 53


State 30

   28 return_stmt: RETURN • expr SEMICOLON

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 54
    func_call  go to state 53


State 31

   29 if_stmt: IF • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 55


State 32

   30 while_stmt: WHILE • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 56


State 33

   24 lvalue: MUL • ID

    ID  shift, and go to state 57


State 34

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 4 (func_decl)


State 35

   23 lvalue: ID •
   53 func_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 58

    $default  reduce using rule 23 (lvalue)


State 36

   13 stmt_list: stmt_list stmt •

    $default  reduce using rule 13 (stmt_list)


State 37

   14 stmt: var_decl_stmt •

    $default  reduce using rule 14 (stmt)


State 38

   25 assignment_stmt: lvalue • ARROW_LEFT expr SEMICOLON

    ARROW_LEFT  shift, and go to state 59


State 39

   15 stmt: assignment_stmt •

    $default  reduce using rule 15 (stmt)


State 40

   18 stmt: func_call_stmt •

    $default  reduce using rule 18 (stmt)


State 41

   16 stmt: print_stmt •

    $default  reduce using rule 16 (stmt)


State 42

   17 stmt: return_stmt •

    $default  reduce using rule 17 (stmt)


State 43

   19 stmt: if_stmt •

    $default  reduce using rule 19 (stmt)


State 44

   20 stmt: while_stmt •

    $default  reduce using rule 20 (stmt)


State 45

   21 var_decl_stmt: type • ID SEMICOLON
   22              | type • ID ARROW_LEFT expr SEMICOLON

    ID  shift, and go to state 60


State 46

   26 func_call_stmt: func_call • SEMICOLON

    SEMICOLON  shift, and go to state 61


State 47

   48 expr: AMPERSAND • ID

    ID  shift, and go to state 62


State 48

   47 expr: LPAREN • expr RPAREN

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 63
    func_call  go to state 53


State 49

   49 expr: ID •
   53 func_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 58

    $default  reduce using rule 49 (expr)


State 50

   50 expr: INT_LIT •

    $default  reduce using rule 50 (expr)


State 51

   51 expr: FLOAT_LIT •

    $default  reduce using rule 51 (expr)


State 52

   27 print_stmt: PRINT expr • SEMICOLON
   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    PLUS       shift, and go to state 64
    MINUS      shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    LT         shift, and go to state 68
    LE         shift, and go to state 69
    GT         shift, and go to state 70
    GE         shift, and go to state 71
    EQ         shift, and go to state 72
    NE         shift, and go to state 73
    SEMICOLON  shift, and go to state 74


State 53

   52 expr: func_call •

    $default  reduce using rule 52 (expr)


State 54

   28 return_stmt: RETURN expr • SEMICOLON
   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    PLUS       shift, and go to state 64
    MINUS      shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    LT         shift, and go to state 68
    LE         shift, and go to state 69
    GT         shift, and go to state 70
    GE         shift, and go to state 71
    EQ         shift, and go to state 72
    NE         shift, and go to state 73
    SEMICOLON  shift, and go to state 75


State 55

   29 if_stmt: IF LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 76
    func_call  go to state 53


State 56

   30 while_stmt: WHILE LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 77
    func_call  go to state 53


State 57

   24 lvalue: MUL ID •

    $default  reduce using rule 24 (lvalue)


State 58

   53 func_call: ID LPAREN • arg_list_opt RPAREN

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    $default  reduce using rule 54 (arg_list_opt)

    expr          go to state 78
    func_call     go to state 53
    arg_list_opt  go to state 79
    arg_list      go to state 80


State 59

   25 assignment_stmt: lvalue ARROW_LEFT • expr SEMICOLON

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 81
    func_call  go to state 53


State 60

   21 var_decl_stmt: type ID • SEMICOLON
   22              | type ID • ARROW_LEFT expr SEMICOLON

    ARROW_LEFT  shift, and go to state 82
    SEMICOLON   shift, and go to state 83


State 61

   26 func_call_stmt: func_call SEMICOLON •

    $default  reduce using rule 26 (func_call_stmt)


State 62

   48 expr: AMPERSAND ID •

    $default  reduce using rule 48 (expr)


State 63

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr
   47     | LPAREN expr • RPAREN

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    LT      shift, and go to state 68
    LE      shift, and go to state 69
    GT      shift, and go to state 70
    GE      shift, and go to state 71
    EQ      shift, and go to state 72
    NE      shift, and go to state 73
    RPAREN  shift, and go to state 84


State 64

   37 expr: expr PLUS • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 85
    func_call  go to state 53


State 65

   38 expr: expr MINUS • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 86
    func_call  go to state 53


State 66

   39 expr: expr MUL • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 87
    func_call  go to state 53


State 67

   40 expr: expr DIV • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 88
    func_call  go to state 53


State 68

   41 expr: expr LT • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 89
    func_call  go to state 53


State 69

   42 expr: expr LE • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 90
    func_call  go to state 53


State 70

   43 expr: expr GT • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 91
    func_call  go to state 53


State 71

   44 expr: expr GE • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 92
    func_call  go to state 53


State 72

   45 expr: expr EQ • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 93
    func_call  go to state 53


State 73

   46 expr: expr NE • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 94
    func_call  go to state 53


State 74

   27 print_stmt: PRINT expr SEMICOLON •

    $default  reduce using rule 27 (print_stmt)


State 75

   28 return_stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 28 (return_stmt)


State 76

   29 if_stmt: IF LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    LT      shift, and go to state 68
    LE      shift, and go to state 69
    GT      shift, and go to state 70
    GE      shift, and go to state 71
    EQ      shift, and go to state 72
    NE      shift, and go to state 73
    RPAREN  shift, and go to state 95


State 77

   30 while_stmt: WHILE LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    LT      shift, and go to state 68
    LE      shift, and go to state 69
    GT      shift, and go to state 70
    GE      shift, and go to state 71
    EQ      shift, and go to state 72
    NE      shift, and go to state 73
    RPAREN  shift, and go to state 96


State 78

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr
   56 arg_list: expr •

    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    MUL    shift, and go to state 66
    DIV    shift, and go to state 67
    LT     shift, and go to state 68
    LE     shift, and go to state 69
    GT     shift, and go to state 70
    GE     shift, and go to state 71
    EQ     shift, and go to state 72
    NE     shift, and go to state 73

    $default  reduce using rule 56 (arg_list)


State 79

   53 func_call: ID LPAREN arg_list_opt • RPAREN

    RPAREN  shift, and go to state 97


State 80

   55 arg_list_opt: arg_list •
   57 arg_list: arg_list • COMMA expr

    COMMA  shift, and go to state 98

    $default  reduce using rule 55 (arg_list_opt)


State 81

   25 assignment_stmt: lvalue ARROW_LEFT expr • SEMICOLON
   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    PLUS       shift, and go to state 64
    MINUS      shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    LT         shift, and go to state 68
    LE         shift, and go to state 69
    GT         shift, and go to state 70
    GE         shift, and go to state 71
    EQ         shift, and go to state 72
    NE         shift, and go to state 73
    SEMICOLON  shift, and go to state 99


State 82

   22 var_decl_stmt: type ID ARROW_LEFT • expr SEMICOLON

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 100
    func_call  go to state 53


State 83

   21 var_decl_stmt: type ID SEMICOLON •

    $default  reduce using rule 21 (var_decl_stmt)


State 84

   47 expr: LPAREN expr RPAREN •

    $default  reduce using rule 47 (expr)


State 85

   37 expr: expr • PLUS expr
   37     | expr PLUS expr •
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67
    LT   shift, and go to state 68
    LE   shift, and go to state 69
    GT   shift, and go to state 70
    GE   shift, and go to state 71
    EQ   shift, and go to state 72
    NE   shift, and go to state 73

    $default  reduce using rule 37 (expr)


State 86

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   38     | expr MINUS expr •
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67
    LT   shift, and go to state 68
    LE   shift, and go to state 69
    GT   shift, and go to state 70
    GE   shift, and go to state 71
    EQ   shift, and go to state 72
    NE   shift, and go to state 73

    $default  reduce using rule 38 (expr)


State 87

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   39     | expr MUL expr •
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    LT  shift, and go to state 68
    LE  shift, and go to state 69
    GT  shift, and go to state 70
    GE  shift, and go to state 71
    EQ  shift, and go to state 72
    NE  shift, and go to state 73

    $default  reduce using rule 39 (expr)


State 88

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   40     | expr DIV expr •
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    LT  shift, and go to state 68
    LE  shift, and go to state 69
    GT  shift, and go to state 70
    GE  shift, and go to state 71
    EQ  shift, and go to state 72
    NE  shift, and go to state 73

    $default  reduce using rule 40 (expr)


State 89

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   41     | expr LT expr •
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    $default  reduce using rule 41 (expr)


State 90

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   42     | expr LE expr •
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    $default  reduce using rule 42 (expr)


State 91

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   43     | expr GT expr •
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    $default  reduce using rule 43 (expr)


State 92

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   44     | expr GE expr •
   45     | expr • EQ expr
   46     | expr • NE expr

    $default  reduce using rule 44 (expr)


State 93

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   45     | expr EQ expr •
   46     | expr • NE expr

    $default  reduce using rule 45 (expr)


State 94

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr
   46     | expr NE expr •

    $default  reduce using rule 46 (expr)


State 95

   29 if_stmt: IF LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 101


State 96

   30 while_stmt: WHILE LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 102


State 97

   53 func_call: ID LPAREN arg_list_opt RPAREN •

    $default  reduce using rule 53 (func_call)


State 98

   57 arg_list: arg_list COMMA • expr

    AMPERSAND  shift, and go to state 47
    LPAREN     shift, and go to state 48
    ID         shift, and go to state 49
    INT_LIT    shift, and go to state 50
    FLOAT_LIT  shift, and go to state 51

    expr       go to state 103
    func_call  go to state 53


State 99

   25 assignment_stmt: lvalue ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 25 (assignment_stmt)


State 100

   22 var_decl_stmt: type ID ARROW_LEFT expr • SEMICOLON
   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr

    PLUS       shift, and go to state 64
    MINUS      shift, and go to state 65
    MUL        shift, and go to state 66
    DIV        shift, and go to state 67
    LT         shift, and go to state 68
    LE         shift, and go to state 69
    GT         shift, and go to state 70
    GE         shift, and go to state 71
    EQ         shift, and go to state 72
    NE         shift, and go to state 73
    SEMICOLON  shift, and go to state 104


State 101

   29 if_stmt: IF LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 12 (stmt_list)

    stmt_list  go to state 105


State 102

   30 while_stmt: WHILE LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 12 (stmt_list)

    stmt_list  go to state 106


State 103

   37 expr: expr • PLUS expr
   38     | expr • MINUS expr
   39     | expr • MUL expr
   40     | expr • DIV expr
   41     | expr • LT expr
   42     | expr • LE expr
   43     | expr • GT expr
   44     | expr • GE expr
   45     | expr • EQ expr
   46     | expr • NE expr
   57 arg_list: arg_list COMMA expr •

    PLUS   shift, and go to state 64
    MINUS  shift, and go to state 65
    MUL    shift, and go to state 66
    DIV    shift, and go to state 67
    LT     shift, and go to state 68
    LE     shift, and go to state 69
    GT     shift, and go to state 70
    GE     shift, and go to state 71
    EQ     shift, and go to state 72
    NE     shift, and go to state 73

    $default  reduce using rule 57 (arg_list)


State 104

   22 var_decl_stmt: type ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 22 (var_decl_stmt)


State 105

   13 stmt_list: stmt_list • stmt
   29 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    BST       shift, and go to state 6
    PRINT     shift, and go to state 29
    RETURN    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    MUL       shift, and go to state 33
    RBRACE    shift, and go to state 107
    ID        shift, and go to state 35

    stmt             go to state 36
    var_decl_stmt    go to state 37
    lvalue           go to state 38
    assignment_stmt  go to state 39
    func_call_stmt   go to state 40
    print_stmt       go to state 41
    return_stmt      go to state 42
    if_stmt          go to state 43
    while_stmt       go to state 44
    type             go to state 45
    func_call        go to state 46


State 106

   13 stmt_list: stmt_list • stmt
   30 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    BST       shift, and go to state 6
    PRINT     shift, and go to state 29
    RETURN    shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    MUL       shift, and go to state 33
    RBRACE    shift, and go to state 108
    ID        shift, and go to state 35

    stmt             go to state 36
    var_decl_stmt    go to state 37
    lvalue           go to state 38
    assignment_stmt  go to state 39
    func_call_stmt   go to state 40
    print_stmt       go to state 41
    return_stmt      go to state 42
    if_stmt          go to state 43
    while_stmt       go to state 44
    type             go to state 45
    func_call        go to state 46


State 107

   29 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 29 (if_stmt)


State 108

   30 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 30 (while_stmt)
