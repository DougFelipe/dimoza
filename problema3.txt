// PROBLEMA 3: OPERAÇÕES COM MATRIZES
// Lê duas matrizes numéricas e calcula soma e produto quando possível

Unit main() {
    print_string "=== PROBLEMA 3: OPERACOES COM MATRIZES ===";
    print_string "";
    
    // Solicita dimensões da primeira matriz
    print_string "Digite as dimensoes da primeira matriz:";
    print_string "Numero de linhas da matriz A:";
    Float entrada1 <- read();
    Int linhas_A <- entrada1;
    
    print_string "Numero de colunas da matriz A:";
    Float entrada2 <- read();
    Int colunas_A <- entrada2;
    
    // Solicita dimensões da segunda matriz
    print_string "Digite as dimensoes da segunda matriz:";
    print_string "Numero de linhas da matriz B:";
    Float entrada3 <- read();
    Int linhas_B <- entrada3;
    
    print_string "Numero de colunas da matriz B:";
    Float entrada4 <- read();
    Int colunas_B <- entrada4;
    
    // Verificações básicas de dimensões
    if (linhas_A <= 0) {
        print_string "ERRO: Numero de linhas da matriz A deve ser positivo!";
    }
    if (colunas_A <= 0) {
        print_string "ERRO: Numero de colunas da matriz A deve ser positivo!";
    }
    if (linhas_B <= 0) {
        print_string "ERRO: Numero de linhas da matriz B deve ser positivo!";
    }
    if (colunas_B <= 0) {
        print_string "ERRO: Numero de colunas da matriz B deve ser positivo!";
    }
    
    // Continua apenas se as dimensões são válidas
    if (linhas_A > 0) {
        if (colunas_A > 0) {
            if (linhas_B > 0) {
                if (colunas_B > 0) {
                    print_string "";
                    print_string "=== DIMENSOES DAS MATRIZES ===";
                    print_string "Matriz A: ";
                    print linhas_A;
                    print_string "x";
                    print colunas_A;
                    print_string "Matriz B: ";
                    print linhas_B;
                    print_string "x";
                    print colunas_B;
                    print_string "";
                    
                    // ===================================================================
                    // LEITURA DOS ELEMENTOS DAS MATRIZES
                    // ===================================================================
                    print_string "=== LEITURA DOS ELEMENTOS ===";
                    
                    // Para simplicidade, vamos trabalhar com matrizes pequenas (máximo 3x3)
                    // e ler apenas os elementos necessários
                    
                    // Matriz A - declaração de variáveis para até 3x3
                    Float a11 <- 0.0; Float a12 <- 0.0; Float a13 <- 0.0;
                    Float a21 <- 0.0; Float a22 <- 0.0; Float a23 <- 0.0;
                    Float a31 <- 0.0; Float a32 <- 0.0; Float a33 <- 0.0;
                    
                    // Matriz B - declaração de variáveis para até 3x3
                    Float b11 <- 0.0; Float b12 <- 0.0; Float b13 <- 0.0;
                    Float b21 <- 0.0; Float b22 <- 0.0; Float b23 <- 0.0;
                    Float b31 <- 0.0; Float b32 <- 0.0; Float b33 <- 0.0;
                    
                    // Leitura da Matriz A
                    print_string "Digite os elementos da matriz A (linha por linha):";
                    
                    // Linha 1 da matriz A
                    if (linhas_A >= 1) {
                        if (colunas_A >= 1) {
                            print_string "A[1,1]:";
                            a11 <- read();
                        }
                        if (colunas_A >= 2) {
                            print_string "A[1,2]:";
                            a12 <- read();
                        }
                        if (colunas_A >= 3) {
                            print_string "A[1,3]:";
                            a13 <- read();
                        }
                    }
                    
                    // Linha 2 da matriz A
                    if (linhas_A >= 2) {
                        if (colunas_A >= 1) {
                            print_string "A[2,1]:";
                            a21 <- read();
                        }
                        if (colunas_A >= 2) {
                            print_string "A[2,2]:";
                            a22 <- read();
                        }
                        if (colunas_A >= 3) {
                            print_string "A[2,3]:";
                            a23 <- read();
                        }
                    }
                    
                    // Linha 3 da matriz A
                    if (linhas_A >= 3) {
                        if (colunas_A >= 1) {
                            print_string "A[3,1]:";
                            a31 <- read();
                        }
                        if (colunas_A >= 2) {
                            print_string "A[3,2]:";
                            a32 <- read();
                        }
                        if (colunas_A >= 3) {
                            print_string "A[3,3]:";
                            a33 <- read();
                        }
                    }
                    
                    // Leitura da Matriz B
                    print_string "";
                    print_string "Digite os elementos da matriz B (linha por linha):";
                    
                    // Linha 1 da matriz B
                    if (linhas_B >= 1) {
                        if (colunas_B >= 1) {
                            print_string "B[1,1]:";
                            b11 <- read();
                        }
                        if (colunas_B >= 2) {
                            print_string "B[1,2]:";
                            b12 <- read();
                        }
                        if (colunas_B >= 3) {
                            print_string "B[1,3]:";
                            b13 <- read();
                        }
                    }
                    
                    // Linha 2 da matriz B
                    if (linhas_B >= 2) {
                        if (colunas_B >= 1) {
                            print_string "B[2,1]:";
                            b21 <- read();
                        }
                        if (colunas_B >= 2) {
                            print_string "B[2,2]:";
                            b22 <- read();
                        }
                        if (colunas_B >= 3) {
                            print_string "B[2,3]:";
                            b23 <- read();
                        }
                    }
                    
                    // Linha 3 da matriz B
                    if (linhas_B >= 3) {
                        if (colunas_B >= 1) {
                            print_string "B[3,1]:";
                            b31 <- read();
                        }
                        if (colunas_B >= 2) {
                            print_string "B[3,2]:";
                            b32 <- read();
                        }
                        if (colunas_B >= 3) {
                            print_string "B[3,3]:";
                            b33 <- read();
                        }
                    }
                    
                    // ===================================================================
                    // EXIBIÇÃO DAS MATRIZES LIDAS
                    // ===================================================================
                    print_string "";
                    print_string "=== MATRIZES LIDAS ===";
                    
                    print_string "Matriz A:";
                    // Linha 1 de A
                    if (linhas_A >= 1) {
                        print_string "[ ";
                        if (colunas_A >= 1) { print a11; print_string " "; }
                        if (colunas_A >= 2) { print a12; print_string " "; }
                        if (colunas_A >= 3) { print a13; print_string " "; }
                        print_string "]";
                    }
                    // Linha 2 de A
                    if (linhas_A >= 2) {
                        print_string "[ ";
                        if (colunas_A >= 1) { print a21; print_string " "; }
                        if (colunas_A >= 2) { print a22; print_string " "; }
                        if (colunas_A >= 3) { print a23; print_string " "; }
                        print_string "]";
                    }
                    // Linha 3 de A
                    if (linhas_A >= 3) {
                        print_string "[ ";
                        if (colunas_A >= 1) { print a31; print_string " "; }
                        if (colunas_A >= 2) { print a32; print_string " "; }
                        if (colunas_A >= 3) { print a33; print_string " "; }
                        print_string "]";
                    }
                    
                    print_string "";
                    print_string "Matriz B:";
                    // Linha 1 de B
                    if (linhas_B >= 1) {
                        print_string "[ ";
                        if (colunas_B >= 1) { print b11; print_string " "; }
                        if (colunas_B >= 2) { print b12; print_string " "; }
                        if (colunas_B >= 3) { print b13; print_string " "; }
                        print_string "]";
                    }
                    // Linha 2 de B
                    if (linhas_B >= 2) {
                        print_string "[ ";
                        if (colunas_B >= 1) { print b21; print_string " "; }
                        if (colunas_B >= 2) { print b22; print_string " "; }
                        if (colunas_B >= 3) { print b23; print_string " "; }
                        print_string "]";
                    }
                    // Linha 3 de B
                    if (linhas_B >= 3) {
                        print_string "[ ";
                        if (colunas_B >= 1) { print b31; print_string " "; }
                        if (colunas_B >= 2) { print b32; print_string " "; }
                        if (colunas_B >= 3) { print b33; print_string " "; }
                        print_string "]";
                    }
                    
                    // ===================================================================
                    // OPERAÇÃO 1: SOMA DE MATRIZES
                    // ===================================================================
                    print_string "";
                    print_string "=== OPERACAO 1: SOMA DE MATRIZES ===";
                    
                    // Verificar se a soma é possível (mesmas dimensões)
                    Int soma_possivel <- 0;
                    if (linhas_A == linhas_B) {
                        if (colunas_A == colunas_B) {
                            soma_possivel <- 1;
                        }
                    }
                    
                    if (soma_possivel == 1) {
                        print_string "A soma e possivel (matrizes de mesma dimensao)";
                        print_string "Resultado da soma A + B:";
                        
                        // Calcular e exibir a soma
                        // Linha 1
                        if (linhas_A >= 1) {
                            print_string "[ ";
                            if (colunas_A >= 1) { 
                                Float soma11 <- a11 + b11;
                                print soma11; print_string " ";
                            }
                            if (colunas_A >= 2) { 
                                Float soma12 <- a12 + b12;
                                print soma12; print_string " ";
                            }
                            if (colunas_A >= 3) { 
                                Float soma13 <- a13 + b13;
                                print soma13; print_string " ";
                            }
                            print_string "]";
                        }
                        // Linha 2
                        if (linhas_A >= 2) {
                            print_string "[ ";
                            if (colunas_A >= 1) { 
                                Float soma21 <- a21 + b21;
                                print soma21; print_string " ";
                            }
                            if (colunas_A >= 2) { 
                                Float soma22 <- a22 + b22;
                                print soma22; print_string " ";
                            }
                            if (colunas_A >= 3) { 
                                Float soma23 <- a23 + b23;
                                print soma23; print_string " ";
                            }
                            print_string "]";
                        }
                        // Linha 3
                        if (linhas_A >= 3) {
                            print_string "[ ";
                            if (colunas_A >= 1) { 
                                Float soma31 <- a31 + b31;
                                print soma31; print_string " ";
                            }
                            if (colunas_A >= 2) { 
                                Float soma32 <- a32 + b32;
                                print soma32; print_string " ";
                            }
                            if (colunas_A >= 3) { 
                                Float soma33 <- a33 + b33;
                                print soma33; print_string " ";
                            }
                            print_string "]";
                        }
                    }
                    if (soma_possivel == 0) {
                        print_string "A soma NAO e possivel!";
                        print_string "Motivo: As matrizes devem ter as mesmas dimensoes";
                        print_string "Matriz A e ";
                        print linhas_A;
                        print_string "x";
                        print colunas_A;
                        print_string "Matriz B e ";
                        print linhas_B;
                        print_string "x";
                        print colunas_B;
                    }
                    
                    // ===================================================================
                    // OPERAÇÃO 2: PRODUTO DE MATRIZES
                    // ===================================================================
                    print_string "";
                    print_string "=== OPERACAO 2: PRODUTO DE MATRIZES ===";
                    
                    // Verificar se o produto é possível (colunas_A == linhas_B)
                    Int produto_possivel <- 0;
                    if (colunas_A == linhas_B) {
                        produto_possivel <- 1;
                    }
                    
                    if (produto_possivel == 1) {
                        print_string "O produto e possivel";
                        print_string "Dimensao do resultado: ";
                        print linhas_A;
                        print_string "x";
                        print colunas_B;
                        print_string "Resultado do produto A x B:";
                        
                        // Calcular e exibir o produto (simplificado para até 3x3)
                        // Produto[i,j] = sum(A[i,k] * B[k,j]) para k de 1 até colunas_A
                        
                        // Linha 1 do produto
                        if (linhas_A >= 1) {
                            print_string "[ ";
                            if (colunas_B >= 1) {
                                Float prod11 <- 0.0;
                                if (colunas_A >= 1) { prod11 <- prod11 + (a11 * b11); }
                                if (colunas_A >= 2) { prod11 <- prod11 + (a12 * b21); }
                                if (colunas_A >= 3) { prod11 <- prod11 + (a13 * b31); }
                                print prod11; print_string " ";
                            }
                            if (colunas_B >= 2) {
                                Float prod12 <- 0.0;
                                if (colunas_A >= 1) { prod12 <- prod12 + (a11 * b12); }
                                if (colunas_A >= 2) { prod12 <- prod12 + (a12 * b22); }
                                if (colunas_A >= 3) { prod12 <- prod12 + (a13 * b32); }
                                print prod12; print_string " ";
                            }
                            if (colunas_B >= 3) {
                                Float prod13 <- 0.0;
                                if (colunas_A >= 1) { prod13 <- prod13 + (a11 * b13); }
                                if (colunas_A >= 2) { prod13 <- prod13 + (a12 * b23); }
                                if (colunas_A >= 3) { prod13 <- prod13 + (a13 * b33); }
                                print prod13; print_string " ";
                            }
                            print_string "]";
                        }
                        
                        // Linha 2 do produto
                        if (linhas_A >= 2) {
                            print_string "[ ";
                            if (colunas_B >= 1) {
                                Float prod21 <- 0.0;
                                if (colunas_A >= 1) { prod21 <- prod21 + (a21 * b11); }
                                if (colunas_A >= 2) { prod21 <- prod21 + (a22 * b21); }
                                if (colunas_A >= 3) { prod21 <- prod21 + (a23 * b31); }
                                print prod21; print_string " ";
                            }
                            if (colunas_B >= 2) {
                                Float prod22 <- 0.0;
                                if (colunas_A >= 1) { prod22 <- prod22 + (a21 * b12); }
                                if (colunas_A >= 2) { prod22 <- prod22 + (a22 * b22); }
                                if (colunas_A >= 3) { prod22 <- prod22 + (a23 * b32); }
                                print prod22; print_string " ";
                            }
                            if (colunas_B >= 3) {
                                Float prod23 <- 0.0;
                                if (colunas_A >= 1) { prod23 <- prod23 + (a21 * b13); }
                                if (colunas_A >= 2) { prod23 <- prod23 + (a22 * b23); }
                                if (colunas_A >= 3) { prod23 <- prod23 + (a23 * b33); }
                                print prod23; print_string " ";
                            }
                            print_string "]";
                        }
                        
                        // Linha 3 do produto
                        if (linhas_A >= 3) {
                            print_string "[ ";
                            if (colunas_B >= 1) {
                                Float prod31 <- 0.0;
                                if (colunas_A >= 1) { prod31 <- prod31 + (a31 * b11); }
                                if (colunas_A >= 2) { prod31 <- prod31 + (a32 * b21); }
                                if (colunas_A >= 3) { prod31 <- prod31 + (a33 * b31); }
                                print prod31; print_string " ";
                            }
                            if (colunas_B >= 2) {
                                Float prod32 <- 0.0;
                                if (colunas_A >= 1) { prod32 <- prod32 + (a31 * b12); }
                                if (colunas_A >= 2) { prod32 <- prod32 + (a32 * b22); }
                                if (colunas_A >= 3) { prod32 <- prod32 + (a33 * b32); }
                                print prod32; print_string " ";
                            }
                            if (colunas_B >= 3) {
                                Float prod33 <- 0.0;
                                if (colunas_A >= 1) { prod33 <- prod33 + (a31 * b13); }
                                if (colunas_A >= 2) { prod33 <- prod33 + (a32 * b23); }
                                if (colunas_A >= 3) { prod33 <- prod33 + (a33 * b33); }
                                print prod33; print_string " ";
                            }
                            print_string "]";
                        }
                    }
                    if (produto_possivel == 0) {
                        print_string "O produto NAO e possivel!";
                        print_string "Motivo: O numero de colunas de A deve ser igual ao numero de linhas de B";
                        print_string "Matriz A tem ";
                        print colunas_A;
                        print_string "colunas";
                        print_string "Matriz B tem ";
                        print linhas_B;
                        print_string "linhas";
                        print_string "Para multiplicar A x B, precisamos: colunas(A) = linhas(B)";
                    }
                    
                    print_string "";
                    print_string "=== PROGRAMA CONCLUIDO ===";
                }
            }
        }
    }
}
