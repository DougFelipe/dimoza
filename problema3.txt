// Problema 3: Operações com Matrizes - Implementação Pura  
// Programa que lê duas matrizes numéricas e realiza soma e produto quando possível
// Sem uso de bibliotecas externas - implementação direta na linguagem

Unit printMatrix2x2(Float a11, Float a12, Float a21, Float a22) {
    print a11;
    print a12;
    print a21;
    print a22;
}

Unit main() {
    // === CASO 1: Matrizes 2x2 Compatíveis ===
    
    // Matriz A (2x2)
    Float a11 <- 1.0;
    Float a12 <- 2.0;
    Float a21 <- 3.0;
    Float a22 <- 4.0;
    
    // Matriz B (2x2)
    Float b11 <- 5.0;
    Float b12 <- 6.0;
    Float b21 <- 7.0;
    Float b22 <- 8.0;
    
    // Exibir as matrizes
    print 100.0; // Código: "Primeira matriz (2x2):"
    printMatrix2x2(a11, a12, a21, a22);
    
    print 200.0; // Código: "Segunda matriz (2x2):"
    printMatrix2x2(b11, b12, b21, b22);
    
    // Soma sempre possível para matrizes de mesma dimensão
    print 300.0; // Código: "Soma A + B:"
    Float s11 <- a11 + b11;
    Float s12 <- a12 + b12;
    Float s21 <- a21 + b21;
    Float s22 <- a22 + b22;
    printMatrix2x2(s11, s12, s21, s22);
    
    // Produto sempre possível para matrizes quadradas de mesma dimensão
    print 400.0; // Código: "Produto A * B:"
    Float p11 <- a11 * b11 + a12 * b21;
    Float p12 <- a11 * b12 + a12 * b22;
    Float p21 <- a21 * b11 + a22 * b21;
    Float p22 <- a21 * b12 + a22 * b22;
    printMatrix2x2(p11, p12, p21, p22);
    
    // === CASO 2: Demonstração de Incompatibilidade ===
    
    // Matriz C (2x3) - simulada com 6 elementos
    Float c11 <- 1.0;
    Float c12 <- 2.0;
    Float c13 <- 3.0;
    Float c21 <- 4.0;
    Float c22 <- 5.0;
    Float c23 <- 6.0;
    
    // Matriz D (3x2) - simulada com 6 elementos
    Float d11 <- 7.0;
    Float d12 <- 8.0;
    Float d21 <- 9.0;
    Float d22 <- 10.0;
    Float d31 <- 11.0;
    Float d32 <- 12.0;
    
    print 500.0; // Código: "Matriz C (2x3):"
    print c11;
    print c12;
    print c13;
    print c21;
    print c22;
    print c23;
    
    print 600.0; // Código: "Matriz D (3x2):"
    print d11;
    print d12;
    print d21;
    print d22;
    print d31;
    print d32;
    
    // Soma C(2x3) + D(3x2) é impossível (dimensões diferentes)
    print 700.0; // Código: "Soma C + D impossível - dimensões incompatíveis"
    
    // Produto C(2x3) * D(3x2) é possível (resultado 2x2)
    print 800.0; // Código: "Produto C * D possível (resultado 2x2):"
    Float r11 <- c11 * d11 + c12 * d21 + c13 * d31;
    Float r12 <- c11 * d12 + c12 * d22 + c13 * d32;
    Float r21 <- c21 * d11 + c22 * d21 + c23 * d31;
    Float r22 <- c21 * d12 + c22 * d22 + c23 * d32;
    printMatrix2x2(r11, r12, r21, r22);
    
    // === CASO 3: Leitura Interativa do Usuário ===
    
    print 900.0; // Código: "Digite os elementos da matriz E (2x2):"
    Float e11 <- read();
    Float e12 <- read();
    Float e21 <- read();
    Float e22 <- read();
    
    print 1000.0; // Código: "Digite os elementos da matriz F (2x2):"
    Float f11 <- read();
    Float f12 <- read();
    Float f21 <- read();
    Float f22 <- read();
    
    print 1100.0; // Código: "Matriz E lida:"
    printMatrix2x2(e11, e12, e21, e22);
    
    print 1200.0; // Código: "Matriz F lida:"
    printMatrix2x2(f11, f12, f21, f22);
    
    // Como ambas são 2x2, sempre podem ser somadas e multiplicadas
    print 1300.0; // Código: "Soma E + F:"
    Float se11 <- e11 + f11;
    Float se12 <- e12 + f12;
    Float se21 <- e21 + f21;
    Float se22 <- e22 + f22;
    printMatrix2x2(se11, se12, se21, se22);
    
    print 1400.0; // Código: "Produto E * F:"
    Float pe11 <- e11 * f11 + e12 * f21;
    Float pe12 <- e11 * f12 + e12 * f22;
    Float pe21 <- e21 * f11 + e22 * f21;
    Float pe22 <- e21 * f12 + e22 * f22;
    printMatrix2x2(pe11, pe12, pe21, pe22);
}
