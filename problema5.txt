// PROBLEMA 5: M√ÅXIMO DIVISOR COMUM (MDC) RECURSIVO 


// =================================================================
// M√ìDULO A: FUN√á√ïES AUXILIARES
// =================================================================

// Prot√≥tipo da fun√ß√£o mdc para permitir chamadas recursivas
Unit mdc(Int n, Int m, ref Int r);

// Fun√ß√£o auxiliar para calcular o resto da divis√£o inteira (n % m)
// Implementa a opera√ß√£o m√≥dulo de forma segura
Int resto_divisao(Int n, Int m) {
    // Prote√ß√£o contra divis√£o por zero
    if (m == 0) {
        return n;
    }
    // Calcula resto usando: resto = n - (m √ó quociente)
    return n - (m * (n / m));
}

// =================================================================
// M√ìDULO B: ALGORITMO DE EUCLIDES RECURSIVO
// =================================================================

// Subprograma que calcula o MDC de forma recursiva usando o algoritmo de Euclides
// Par√¢metros: n, m (valores inteiros positivos) - por valor
//            r (resultado do MDC) - por refer√™ncia
Unit mdc(Int n, Int m, ref Int r) {
    print_string "üîÑ Chamada recursiva: mdc(";
    print n;
    print_string ", ";
    print m;
    print_string ")";
    
    // Caso base: se m √© 0, o MDC √© n
    if (m == 0) {
        print_string "‚úÖ Caso base alcan√ßado: MDC = ";
        print n;
        r <- n;
        return;
    }

    // Passo recursivo: aplica o algoritmo de Euclides
    // mdc(n, m) = mdc(m, n % m)
    Int resto <- resto_divisao(n, m);
    print_string "   ‚Üí Pr√≥xima chamada: mdc(";
    print m;
    print_string ", ";
    print resto;
    print_string ") [resto de ";
    print n;
    print_string " √∑ ";
    print m;
    print_string "]";
    
    // Chamada recursiva com os novos valores
    mdc(m, resto, r);
}

// =================================================================
// PROGRAMA PRINCIPAL 
// =================================================================

Unit main() {

    
    print_string "==================================================================";
    print_string "         M√ÅXIMO DIVISOR COMUM (MDC) - LINGUAGEM DIMOZA";
    print_string "==================================================================";

    
    // =============================================================
    // PRIMEIRO CASO DE TESTE - ENTRADA INTERATIVA
    // =============================================================
    
    print_string "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ";
    print_string "                    PRIMEIRO CASO DE TESTE";
    print_string "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ";
    print_string "";
    
    Int num1;
    Int num2;
    Int resultado_mdc;
    
    print_string "üìù Digite os dois n√∫meros naturais positivos:";
    print_string "";
    print_string "üî¢ Digite o primeiro n√∫mero (n):";
    Float entrada1 <- read();
    num1 <- entrada1;
    
    print_string "üî¢ Digite o segundo n√∫mero (m):";
    Float entrada2 <- read();
    num2 <- entrada2;
    
    // =============================================================
    // VALIDA√á√ÉO DOS DADOS INSERIDOS
    // =============================================================
    
    print_string "";
    print_string "üîç VALIDANDO ENTRADA...";
    Int dados_validos <- 1;
    
    if (num1 <= 0) {
        print_string "‚ùå ERRO: O primeiro n√∫mero deve ser positivo!";
        dados_validos <- 0;
    }
    if (num2 <= 0) {
        print_string "‚ùå ERRO: O segundo n√∫mero deve ser positivo!";
        dados_validos <- 0;
    }
    
    if (dados_validos == 1) {
        print_string "‚úÖ Entrada validada com sucesso!";
        print_string "";
        print_string "üìã DADOS CONFIRMADOS:";
        print_string "   Primeiro n√∫mero:  ";
        print num1;
        print_string "   Segundo n√∫mero:   ";
        print num2;
        print_string "";
        
        // =============================================================
        // C√ÅLCULO DO MDC COM EXPLICA√á√ÉO PASSO A PASSO
        // =============================================================
        
        print_string "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ";
        print_string "                    C√ÅLCULO DO MDC RECURSIVO";
        print_string "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ";
        print_string "";
        print_string "üßÆ Calculando MDC(";
        print num1;
        print_string ", ";
        print num2;
        print_string ") usando o algoritmo de Euclides...";
        print_string "";
        print_string "üîç RASTREAMENTO DAS CHAMADAS RECURSIVAS:";
        
        mdc(num1, num2, &resultado_mdc);
        
        print_string "";
        print_string "üéØ RESULTADO FINAL: O MDC de ";
        print num1;
        print_string " e ";
        print num2;
        print_string " √© ";
        print resultado_mdc;
        print_string "";
        
        // =============================================================
        // SEGUNDO CASO DE TESTE - N√öMEROS PR√â-DEFINIDOS
        // =============================================================
        
        print_string "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ";
        print_string "                    SEGUNDO CASO DE TESTE";
        print_string "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ";
        print_string "";
        print_string "üß™ Teste adicional com valores pr√©-definidos: MDC(105, 30)";
        print_string "";
        
        num1 <- 105;
        num2 <- 30;
        
        print_string "üîç RASTREAMENTO DAS CHAMADAS RECURSIVAS:";
        
        mdc(num1, num2, &resultado_mdc);
        
        print_string "";
        print_string "üéØ RESULTADO: O MDC de 105 e 30 √© ";
        print resultado_mdc;
        print_string " (valor esperado: 15)";
        print_string "";
        
        // =============================================================
        // FINALIZA√á√ÉO DO PROGRAMA
        // =============================================================
        
        print_string "==================================================================";
        print_string "                      PROGRAMA FINALIZADO";
        print_string "==================================================================";
        print_string "";
        print_string "‚úÖ Todos os c√°lculos foram executados com sucesso!";
        print_string "";


        
    }
    if (dados_validos == 0) {
        print_string "";
        print_string "==================================================================";
        print_string "                    PROGRAMA ENCERRADO COM ERRO";
        print_string "==================================================================";
        print_string "";
        print_string "‚ùå O programa foi encerrado devido a entrada inv√°lida.";
        print_string "";
        print_string "üìã REQUISITOS PARA EXECU√á√ÉO:";
        print_string "   ‚Ä¢ Os n√∫meros devem ser naturais estritamente positivos";
        print_string "   ‚Ä¢ Valores devem ser maiores que zero";
        print_string "   ‚Ä¢ Entrada deve conter apenas n√∫meros inteiros";
        print_string "";
        print_string "üí° DICA: Execute o programa novamente e insira";
        print_string "         n√∫meros naturais positivos (> 0).";
    }
}
