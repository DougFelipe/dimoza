// PROBLEMA 4: NÚMEROS RACIONAIS - VERSÃO SUPER SIMPLIFICADA

// ===================================================================
// REQUISITO A: Criar rational_t
// ===================================================================
Unit criar_racional(Int a, Int b, ref Int numerador, ref Int denominador) {
    if (b == 0) {
        print_string "ERRO: Denominador zero!";
        numerador <- 0;
        denominador <- 1;
    }
    if (b != 0) {
        numerador <- a;
        denominador <- b;
        
        // Simplificação manual básica
        if (denominador < 0) {
            numerador <- 0 - numerador;
            denominador <- 0 - denominador;
        }
    }
}

// ===================================================================
// REQUISITO B: Comparar igualdade
// ===================================================================
Unit comparar_igualdade(Int num1, Int den1, Int num2, Int den2, ref Int resultado) {
    // Compara usando produto cruzado: num1*den2 == num2*den1
    Int produto1 <- num1 * den2;
    Int produto2 <- num2 * den1;
    
    if (produto1 == produto2) {
        resultado <- 1;
    }
    if (produto1 != produto2) {
        resultado <- 0;
    }
}

// ===================================================================
// REQUISITO C: Operações aritméticas
// ===================================================================

// C.1: SOMA
Unit somar_racionais(Int num1, Int den1, Int num2, Int den2, ref Int result_num, ref Int result_den) {
    result_num <- (num1 * den2) + (num2 * den1);
    result_den <- den1 * den2;
    
    // Simplificação básica - garante denominador positivo
    if (result_den < 0) {
        result_num <- 0 - result_num;
        result_den <- 0 - result_den;
    }
}

// C.2: NEGAÇÃO
Unit negar_racional(Int num, Int den, ref Int result_num, ref Int result_den) {
    result_num <- 0 - num;
    result_den <- den;
}

// C.3: SUBTRAÇÃO
Unit subtrair_racionais(Int num1, Int den1, Int num2, Int den2, ref Int result_num, ref Int result_den) {
    result_num <- (num1 * den2) - (num2 * den1);
    result_den <- den1 * den2;
    
    // Simplificação básica - garante denominador positivo
    if (result_den < 0) {
        result_num <- 0 - result_num;
        result_den <- 0 - result_den;
    }
}

// C.4: MULTIPLICAÇÃO
Unit multiplicar_racionais(Int num1, Int den1, Int num2, Int den2, ref Int result_num, ref Int result_den) {
    result_num <- num1 * num2;
    result_den <- den1 * den2;
    
    // Simplificação básica - garante denominador positivo
    if (result_den < 0) {
        result_num <- 0 - result_num;
        result_den <- 0 - result_den;
    }
}

// C.5: INVERSO
Unit inverter_racional(Int num, Int den, ref Int result_num, ref Int result_den) {
    if (num == 0) {
        print_string "ERRO: Inverso de zero!";
        result_num <- 0;
        result_den <- 1;
    }
    if (num != 0) {
        result_num <- den;
        result_den <- num;
        
        // Simplificação básica - garante denominador positivo
        if (result_den < 0) {
            result_num <- 0 - result_num;
            result_den <- 0 - result_den;
        }
    }
}

// C.6: DIVISÃO
Unit dividir_racionais(Int num1, Int den1, Int num2, Int den2, ref Int result_num, ref Int result_den) {
    if (num2 == 0) {
        print_string "ERRO: Divisao por zero!";
        result_num <- 0;
        result_den <- 1;
    }
    if (num2 != 0) {
        result_num <- num1 * den2;
        result_den <- den1 * num2;
        
        // Simplificação básica - garante denominador positivo
        if (result_den < 0) {
            result_num <- 0 - result_num;
            result_den <- 0 - result_den;
        }
    }
}

// Função para imprimir racional
Unit imprimir_racional(Int num, Int den) {
    if (den == 1) {
        print num;
    }
    if (den != 1) {
        print num;
        print_string "/";
        print den;
    }
}

// ===================================================================
// PROGRAMA PRINCIPAL
// ===================================================================
Unit main() {
    print_string "=== PROBLEMA 4: NUMEROS RACIONAIS ===";
    print_string "";
    
    // Lê 4 números da entrada
    Float entrada1 <- read();
    Int r1_num <- entrada1;
    
    Float entrada2 <- read();
    Int r1_den <- entrada2;
    
    Float entrada3 <- read();
    Int r2_num <- entrada3;
    
    Float entrada4 <- read();
    Int r2_den <- entrada4;
    
    print_string "Entrada processada:";
    print_string "Primeiro racional: ";
    print r1_num;
    print_string "/";
    print r1_den;
    print_string "Segundo racional: ";
    print r2_num;
    print_string "/";
    print r2_den;
    print_string "";
    
    // Verifica denominadores
    if (r1_den == 0) {
        print_string "ERRO: Primeiro denominador e zero!";
    }
    if (r2_den == 0) {
        print_string "ERRO: Segundo denominador e zero!";
    }
    
    if (r1_den != 0) {
        if (r2_den != 0) {
            // REQUISITO A: Criar rational_t
            print_string "=== REQUISITO A: Criacao ===";
            Int rat1_num <- 0;
            Int rat1_den <- 0;
            Int rat2_num <- 0;
            Int rat2_den <- 0;
            
            criar_racional(r1_num, r1_den, &rat1_num, &rat1_den);
            print_string "Primeiro criado: ";
            imprimir_racional(rat1_num, rat1_den);
            
            criar_racional(r2_num, r2_den, &rat2_num, &rat2_den);
            print_string "Segundo criado: ";
            imprimir_racional(rat2_num, rat2_den);
            print_string "";
            
            // REQUISITO B: Comparar
            print_string "=== REQUISITO B: Comparacao ===";
            Int sao_iguais <- 0;
            comparar_igualdade(rat1_num, rat1_den, rat2_num, rat2_den, &sao_iguais);
            print_string "Sao iguais? ";
            if (sao_iguais == 1) {
                print_string "SIM";
            }
            if (sao_iguais == 0) {
                print_string "NAO";
            }
            print_string "";
            
            // REQUISITO C: Operações
            print_string "=== REQUISITO C: Operacoes ===";
            
            // C.1: SOMA
            Int soma_num <- 0;
            Int soma_den <- 0;
            somar_racionais(rat1_num, rat1_den, rat2_num, rat2_den, &soma_num, &soma_den);
            print_string "Soma: ";
            imprimir_racional(soma_num, soma_den);
            
            // C.2: NEGAÇÃO
            Int neg1_num <- 0;
            Int neg1_den <- 0;
            negar_racional(rat1_num, rat1_den, &neg1_num, &neg1_den);
            print_string "Negacao primeiro: ";
            imprimir_racional(neg1_num, neg1_den);
            
            Int neg2_num <- 0;
            Int neg2_den <- 0;
            negar_racional(rat2_num, rat2_den, &neg2_num, &neg2_den);
            print_string "Negacao segundo: ";
            imprimir_racional(neg2_num, neg2_den);
            
            // C.3: SUBTRAÇÃO
            Int sub_num <- 0;
            Int sub_den <- 0;
            subtrair_racionais(rat1_num, rat1_den, rat2_num, rat2_den, &sub_num, &sub_den);
            print_string "Subtracao: ";
            imprimir_racional(sub_num, sub_den);
            
            // C.4: MULTIPLICAÇÃO
            Int mult_num <- 0;
            Int mult_den <- 0;
            multiplicar_racionais(rat1_num, rat1_den, rat2_num, rat2_den, &mult_num, &mult_den);
            print_string "Multiplicacao: ";
            imprimir_racional(mult_num, mult_den);
            
            // C.5: INVERSO
            Int inv1_num <- 0;
            Int inv1_den <- 0;
            inverter_racional(rat1_num, rat1_den, &inv1_num, &inv1_den);
            print_string "Inverso primeiro: ";
            imprimir_racional(inv1_num, inv1_den);
            
            Int inv2_num <- 0;
            Int inv2_den <- 0;
            inverter_racional(rat2_num, rat2_den, &inv2_num, &inv2_den);
            print_string "Inverso segundo: ";
            imprimir_racional(inv2_num, inv2_den);
            
            // C.6: DIVISÃO
            Int div_num <- 0;
            Int div_den <- 0;
            dividir_racionais(rat1_num, rat1_den, rat2_num, rat2_den, &div_num, &div_den);
            print_string "Divisao: ";
            imprimir_racional(div_num, div_den);
            
            print_string "";
            print_string "=== PROGRAMA CONCLUIDO ===";
        }
    }
}
